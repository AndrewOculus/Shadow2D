#ifdef GL_ES
#define LOWP lowp
precision mediump float;
#else
#define LOWP 
#endif

#define PI 3.14
varying LOWP vec4 vColor;
varying vec2 vTexCoord0;


uniform sampler2D u_texture;
uniform vec2 resolution;
uniform float angl;
//alpha threshold for our occlusion map
const float THRESHOLD = 0.75;
float theta;

void main(void) {

  float distance = 1.0;
  
  for (float y=0.0; y<resolution.y; y+=1.0) 
  {
		vec2 norm = vec2(vTexCoord0.s, y/resolution.y) * 2.0 - 1.0;
		
		theta = PI*1.5 + norm.x * PI; 
		float r = (1.0 + norm.y) * 0.5;
		vec2 coord = vec2(-r * sin(theta), -r * cos(theta))/2.0 + vec2(0.5,0.5);
		vec4 data = texture2D(u_texture, coord);
		float dst = y/resolution.y;
		float caster = data.r;
		if (caster > THRESHOLD) 
		{
			distance = min(distance, dst);
			break;
  		}
  } 
  
  //if(theta + PI*2  > PI*angl - 0.1*PI + PI*2 && theta + PI*2 < PI*angl + 0.1*PI + PI*2)
  if(theta - PI*0.5 < PI*0.1  + PI*angl && theta - PI*0.5  > -PI*0.1 + PI*angl || theta-PI*0.5 > PI*2.0 - PI*0.1 + PI*angl || theta-PI*0.5 < PI*0.1 + PI*angl - 2.0* PI)
 	gl_FragColor = vec4(vec3(distance), 1.0);
  else
  	gl_FragColor = vec4(0.0 , 0.0 , 0.0 , 1.0);
}
